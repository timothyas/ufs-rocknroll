#!Jinja2
#
# The experiment applications and dependencies.
[[dependencies]]

	# Define the initial forecast cycle (e.g., cold-start) tasks.
	[[[R1]]]
		graph = """
		      launch: fail => !launch
		      launch: succeed => cylc_graph & STAGING_FETCH_ATMOSFCST_ENS & staging_fetch_icefcst & staging_fetch_oceanfcst & staging_fetch_atmosobs & staging_fetch_atmosgsibcc & staging_fetch_atmostcvsyndat & staging_fetch_oceanobs
		      staging_fetch_icefcst: succeed & staging_fetch_oceanfcst: succeed => ocean_ens_initconds_socaensperts
		      STAGING_FETCH_ATMOSFCST_ENS: succeed-all & ocean_ens_initconds_socaensperts: succeed & staging_fetch_atmosobs: succeed => BKGRD_FORECAST_ENS
		      BKGRD_FORECAST_ENS: succeed-all & staging_fetch_atmosgsibcc: succeed & staging_fetch_atmostcvsyndat: succeed => gsi_3dvar_ens
		      gsi_3dvar_ens: succeed => gsi_enkf
		      gsi_enkf: succeed => gsi_hybgain
		      gsi_hybgain: succeed => gsi_post
		      BKGRD_FORECAST_ENS: succeed-all & staging_fetch_oceanobs: succeed => soca_letkf_observer
		      soca_letkf_observer: succeed => soca_letkf_solver
		      soca_letkf_solver: succeed => SOCA_CHECKPOINT_MODEL_ENS & soca_post
		      gsi_post: succeed => gsi_convdiags
		      soca_post: succeed => soca_insitudiags
		      gsi_convdiags: succeed & soca_insitudiags: succeed & SOCA_CHECKPOINT_MODEL_ENS: succeed-all => archive_noaahpss
		      archive_noaahpss: succeed & cylc_graph: succeed => cleanup
		"""

	# Define the warm-start (e.g., cycling) tasks.
	[[[{{ CYCLE_INTERVAL }}]]]
	      	graph = """
		      launch[-{{ CYCLE_INTERVAL }}]: succeed => launch
		      launch: succeed => staging_fetch_atmosobs & staging_fetch_atmostcvsyndat & staging_fetch_oceanobs
		      gsi_hybgain[-{{ CYCLE_INTERVAL }}]: succeed & SOCA_CHECKPOINT_MODEL_ENS[-{{ CYCLE_INTERVAL }}]: succeed-all & staging_fetch_atmosobs: succeed => BKGRD_FORECAST_ENS
		      BKGRD_FORECAST_ENS: succeed-all & staging_fetch_atmostcvsyndat: succeed => gsi_3dvar_ens
		      gsi_3dvar_ens: succeed => gsi_enkf
		      gsi_enkf: succeed => gsi_hybgain
		      gsi_hybgain: succeed => gsi_post
		      BKGRD_FORECAST_ENS: succeed-all & staging_fetch_oceanobs: succeed => soca_letkf_observer
		      soca_letkf_observer: succeed => soca_letkf_solver
		      soca_letkf_solver: succeed => SOCA_CHECKPOINT_MODEL_ENS & soca_post
		      gsi_post: succeed => gsi_convdiags
		      soca_post: succeed => soca_insitudiags
		      gsi_convdiags: succeed & soca_insitudiags: succeed & SOCA_CHECKPOINT_MODEL_ENS: succeed-all => archive_noaahpss
		      archive_noaahpss: succeed => cleanup
		"""

        # Define tasks to completed following the final forecast
        # warm-start cycle.
	[[[R1/$]]]
		graph = """
		      archive_noaahpss: succeed => PROD_FORECAST_ENS
		      BKGRD_FORECAST_ENS: succeed-all => cleanup
		      cleanup: succeed => finish 
		"""


